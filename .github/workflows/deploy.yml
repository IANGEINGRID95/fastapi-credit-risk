name: CI/CD Pipeline with MLflow and EC2 Deployment

on:
  push:
    branches:
      - main  # Branche sur laquelle vous souhaitez déployer

jobs:
  build:
    runs-on: ubuntu-latest  # Utiliser Ubuntu comme environnement pour le runner

    steps:
    - name: Checkout code
      uses: actions/checkout@v2  # Vérifie le code du dépôt

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'  # La version de Python que vous utilisez

    - name: Install dependencies
      run: |
        pip install --upgrade pip  # Mettre à jour pip pour éviter les problèmes de version
        pip install --no-cache-dir -r requirements.txt  # Ignorer le cache et installer les dépendances
    - name: Install MLflow (if not in requirements.txt)
      run: |
          pip install mlflow  # Assurer l'installation de MLflow
    - name: Run MLflow experiment
      run: |
        python train_model.py  # Exécutez le script d’entraînement du modèle et d’expérimentation avec MLflow
        
    - name: Build Docker image
      run: |
          docker build -t fastapi-app .  # Construire l'image Docker de ton application

    - name: Login to Docker Hub
      run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin  # Connexion à Docker Hub

    - name: Push Docker Image to Docker Hub
      run: |
          docker tag fastapi-app ${{ secrets.DOCKER_USERNAME }}/fastapi-app:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/fastapi-app:latest  # Pousser l'image sur Docker Hub

    - name: Deploy on EC2
      env:
          PRIVATE_KEY: ${{ secrets.AWS_PRIVATE_KEY }}
          HOST: ${{ secrets.AWS_HOST }}
          USER: "ubuntu"
      run: |
          echo "$PRIVATE_KEY" > private_key.pem
          chmod 600 private_key.pem
          ssh -o StrictHostKeyChecking=no -i private_key.pem $USER@$HOST << 'EOF'
            docker pull ${{ secrets.DOCKER_USERNAME }}/fastapi-app:latest  # Récupérer l'image Docker sur EC2
            docker stop fastapi-container || true
            docker rm fastapi-container || true
            docker run -d -p 8000:8000 --name fastapi-container ${{ secrets.DOCKER_USERNAME }}/fastapi-app:latest  # Exécuter l'application sur EC2
          EOF
